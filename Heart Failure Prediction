{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":11165184,"sourceType":"datasetVersion","datasetId":6967416}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Importing necessary packages\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport xgboost as xgb\nimport lightgbm as lgb\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV, cross_val_score\nfrom sklearn.feature_selection import SelectKBest, f_classif\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.metrics import classification_report, confusion_matrix, accuracy_score\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:02.821253Z","iopub.execute_input":"2025-04-08T09:38:02.821521Z","iopub.status.idle":"2025-04-08T09:38:08.327452Z","shell.execute_reply.started":"2025-04-08T09:38:02.821491Z","shell.execute_reply":"2025-04-08T09:38:08.326648Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/heart-failure-prediction-dataset/sample.csv\n/kaggle/input/heart-failure-prediction-dataset/train.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"# Load dataset\nData = pd.read_csv(\"/kaggle/input/heart-failure-prediction-dataset/train.csv\")\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.328298Z","iopub.execute_input":"2025-04-08T09:38:08.328861Z","iopub.status.idle":"2025-04-08T09:38:08.416931Z","shell.execute_reply.started":"2025-04-08T09:38:08.328834Z","shell.execute_reply":"2025-04-08T09:38:08.415908Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"Data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.417808Z","iopub.execute_input":"2025-04-08T09:38:08.418117Z","iopub.status.idle":"2025-04-08T09:38:08.442120Z","shell.execute_reply.started":"2025-04-08T09:38:08.418093Z","shell.execute_reply":"2025-04-08T09:38:08.441409Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"      id    age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  \\\n0  83327  18995       2     162    83.0    120     80            1     1   \n1  86196  17319       1     158    64.0    120     80            1     1   \n2  59158  19017       1     165    95.0    160    100            2     1   \n3  16399  20388       1     164    83.0    150    100            1     1   \n4  29470  18236       1     156    52.0    100     67            1     1   \n\n   smoke  alco  active  cardio  \n0      0     0       0       1  \n1      0     0       1       0  \n2      0     0       1       1  \n3      0     0       1       1  \n4      0     0       0       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>ap_hi</th>\n      <th>ap_lo</th>\n      <th>cholesterol</th>\n      <th>gluc</th>\n      <th>smoke</th>\n      <th>alco</th>\n      <th>active</th>\n      <th>cardio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>83327</td>\n      <td>18995</td>\n      <td>2</td>\n      <td>162</td>\n      <td>83.0</td>\n      <td>120</td>\n      <td>80</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>86196</td>\n      <td>17319</td>\n      <td>1</td>\n      <td>158</td>\n      <td>64.0</td>\n      <td>120</td>\n      <td>80</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>59158</td>\n      <td>19017</td>\n      <td>1</td>\n      <td>165</td>\n      <td>95.0</td>\n      <td>160</td>\n      <td>100</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>16399</td>\n      <td>20388</td>\n      <td>1</td>\n      <td>164</td>\n      <td>83.0</td>\n      <td>150</td>\n      <td>100</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>29470</td>\n      <td>18236</td>\n      <td>1</td>\n      <td>156</td>\n      <td>52.0</td>\n      <td>100</td>\n      <td>67</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"for ob in Data['ap_hi']:\n    if ob < 0:\n        print(ob)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.443643Z","iopub.execute_input":"2025-04-08T09:38:08.443868Z","iopub.status.idle":"2025-04-08T09:38:08.455162Z","shell.execute_reply.started":"2025-04-08T09:38:08.443849Z","shell.execute_reply":"2025-04-08T09:38:08.454363Z"}},"outputs":[{"name":"stdout","text":"-150\n-140\n-120\n-115\n-100\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"for obj in Data['ap_lo']:\n    if obj < 0:\n       print(obj)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.456633Z","iopub.execute_input":"2025-04-08T09:38:08.456868Z","iopub.status.idle":"2025-04-08T09:38:08.477920Z","shell.execute_reply.started":"2025-04-08T09:38:08.456850Z","shell.execute_reply":"2025-04-08T09:38:08.477125Z"}},"outputs":[{"name":"stdout","text":"-70\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"Data[\"ap_hi\"] = Data[\"ap_hi\"].abs()\nData[\"ap_lo\"] = Data[\"ap_lo\"].abs()\nData.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.478663Z","iopub.execute_input":"2025-04-08T09:38:08.478924Z","iopub.status.idle":"2025-04-08T09:38:08.549641Z","shell.execute_reply.started":"2025-04-08T09:38:08.478903Z","shell.execute_reply":"2025-04-08T09:38:08.548929Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"                 id           age        gender        height        weight  \\\ncount  56000.000000  56000.000000  56000.000000  56000.000000  56000.000000   \nmean   49997.024982  19466.634446      1.349107    164.344089     74.222059   \nstd    28874.261935   2461.793196      0.476692      8.226979     14.389746   \nmin        0.000000  10859.000000      1.000000     57.000000     11.000000   \n25%    24993.750000  17669.500000      1.000000    159.000000     65.000000   \n50%    50001.500000  19698.000000      1.000000    165.000000     72.000000   \n75%    74949.500000  21321.000000      2.000000    170.000000     82.000000   \nmax    99999.000000  23692.000000      2.000000    250.000000    200.000000   \n\n              ap_hi         ap_lo   cholesterol          gluc         smoke  \\\ncount  56000.000000  56000.000000  56000.000000  56000.000000  56000.000000   \nmean     129.064054     96.800696      1.366750      1.226679      0.087839   \nstd      161.534098    193.566266      0.679918      0.572321      0.283064   \nmin        1.000000      0.000000      1.000000      1.000000      0.000000   \n25%      120.000000     80.000000      1.000000      1.000000      0.000000   \n50%      120.000000     80.000000      1.000000      1.000000      0.000000   \n75%      140.000000     90.000000      2.000000      1.000000      0.000000   \nmax    16020.000000  11000.000000      3.000000      3.000000      1.000000   \n\n               alco        active        cardio  \ncount  56000.000000  56000.000000  56000.000000  \nmean       0.053018      0.804946      0.499696  \nstd        0.224071      0.396245      0.500004  \nmin        0.000000      0.000000      0.000000  \n25%        0.000000      1.000000      0.000000  \n50%        0.000000      1.000000      0.000000  \n75%        0.000000      1.000000      1.000000  \nmax        1.000000      1.000000      1.000000  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>age</th>\n      <th>gender</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>ap_hi</th>\n      <th>ap_lo</th>\n      <th>cholesterol</th>\n      <th>gluc</th>\n      <th>smoke</th>\n      <th>alco</th>\n      <th>active</th>\n      <th>cardio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n      <td>56000.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>49997.024982</td>\n      <td>19466.634446</td>\n      <td>1.349107</td>\n      <td>164.344089</td>\n      <td>74.222059</td>\n      <td>129.064054</td>\n      <td>96.800696</td>\n      <td>1.366750</td>\n      <td>1.226679</td>\n      <td>0.087839</td>\n      <td>0.053018</td>\n      <td>0.804946</td>\n      <td>0.499696</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>28874.261935</td>\n      <td>2461.793196</td>\n      <td>0.476692</td>\n      <td>8.226979</td>\n      <td>14.389746</td>\n      <td>161.534098</td>\n      <td>193.566266</td>\n      <td>0.679918</td>\n      <td>0.572321</td>\n      <td>0.283064</td>\n      <td>0.224071</td>\n      <td>0.396245</td>\n      <td>0.500004</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>10859.000000</td>\n      <td>1.000000</td>\n      <td>57.000000</td>\n      <td>11.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>24993.750000</td>\n      <td>17669.500000</td>\n      <td>1.000000</td>\n      <td>159.000000</td>\n      <td>65.000000</td>\n      <td>120.000000</td>\n      <td>80.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>50001.500000</td>\n      <td>19698.000000</td>\n      <td>1.000000</td>\n      <td>165.000000</td>\n      <td>72.000000</td>\n      <td>120.000000</td>\n      <td>80.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>74949.500000</td>\n      <td>21321.000000</td>\n      <td>2.000000</td>\n      <td>170.000000</td>\n      <td>82.000000</td>\n      <td>140.000000</td>\n      <td>90.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>99999.000000</td>\n      <td>23692.000000</td>\n      <td>2.000000</td>\n      <td>250.000000</td>\n      <td>200.000000</td>\n      <td>16020.000000</td>\n      <td>11000.000000</td>\n      <td>3.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"markdown","source":"# Data Preprocessing ","metadata":{}},{"cell_type":"code","source":"#selection features and target\nfeatures = Data.drop(['cardio','id'],axis=1)\ntarget = Data['cardio']\nfeatures.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.550354Z","iopub.execute_input":"2025-04-08T09:38:08.550626Z","iopub.status.idle":"2025-04-08T09:38:08.565887Z","shell.execute_reply.started":"2025-04-08T09:38:08.550603Z","shell.execute_reply":"2025-04-08T09:38:08.565266Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"     age  gender  height  weight  ap_hi  ap_lo  cholesterol  gluc  smoke  \\\n0  18995       2     162    83.0    120     80            1     1      0   \n1  17319       1     158    64.0    120     80            1     1      0   \n2  19017       1     165    95.0    160    100            2     1      0   \n3  20388       1     164    83.0    150    100            1     1      0   \n4  18236       1     156    52.0    100     67            1     1      0   \n\n   alco  active  \n0     0       0  \n1     0       1  \n2     0       1  \n3     0       1  \n4     0       0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>age</th>\n      <th>gender</th>\n      <th>height</th>\n      <th>weight</th>\n      <th>ap_hi</th>\n      <th>ap_lo</th>\n      <th>cholesterol</th>\n      <th>gluc</th>\n      <th>smoke</th>\n      <th>alco</th>\n      <th>active</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>18995</td>\n      <td>2</td>\n      <td>162</td>\n      <td>83.0</td>\n      <td>120</td>\n      <td>80</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>17319</td>\n      <td>1</td>\n      <td>158</td>\n      <td>64.0</td>\n      <td>120</td>\n      <td>80</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>19017</td>\n      <td>1</td>\n      <td>165</td>\n      <td>95.0</td>\n      <td>160</td>\n      <td>100</td>\n      <td>2</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>20388</td>\n      <td>1</td>\n      <td>164</td>\n      <td>83.0</td>\n      <td>150</td>\n      <td>100</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>18236</td>\n      <td>1</td>\n      <td>156</td>\n      <td>52.0</td>\n      <td>100</td>\n      <td>67</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"#splitting data into train and test data\nX_train,X_test,y_train,y_test = train_test_split(features,target,shuffle=True, random_state=42)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.566548Z","iopub.execute_input":"2025-04-08T09:38:08.566737Z","iopub.status.idle":"2025-04-08T09:38:08.579194Z","shell.execute_reply.started":"2025-04-08T09:38:08.566720Z","shell.execute_reply":"2025-04-08T09:38:08.578364Z"}},"outputs":[],"execution_count":8},{"cell_type":"code","source":"#Normalization\nscaler = StandardScaler()\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.transform(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.580011Z","iopub.execute_input":"2025-04-08T09:38:08.580259Z","iopub.status.idle":"2025-04-08T09:38:08.619432Z","shell.execute_reply.started":"2025-04-08T09:38:08.580229Z","shell.execute_reply":"2025-04-08T09:38:08.618717Z"}},"outputs":[],"execution_count":9},{"cell_type":"code","source":"# Performing ANOVA to select the top K features\nk = 10\nanova_select_feature = SelectKBest(score_func = f_classif, k = k)\nX_train_selected = anova_select_feature.fit_transform(X_train_scaled, y_train)\nX_test_selected = anova_select_feature.transform(X_test_scaled)\n\n# Retrieve anova scores for all tests\nanova_scores = anova_select_feature.scores_\n\n# Mapping features to their anova F-scores\nfeature_names = features.columns\nanova_results = dict(zip(feature_names, anova_scores))\n\n# Display anova results\nprint(\"ANOVA F-scores for Features:\")\nfor feature, score in anova_results.items():\n    print(f\"{feature}: {score:.2f}\")\n\n# Selected feature indices and names\nselected_feature_indices = anova_select_feature.get_support(indices=True)\nselected_features = feature_names[selected_feature_indices]\nprint(\"\\nSelected Features (Top k):\", list(selected_features))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.620206Z","iopub.execute_input":"2025-04-08T09:38:08.620490Z","iopub.status.idle":"2025-04-08T09:38:08.644141Z","shell.execute_reply.started":"2025-04-08T09:38:08.620463Z","shell.execute_reply":"2025-04-08T09:38:08.643197Z"}},"outputs":[{"name":"stdout","text":"ANOVA F-scores for Features:\nage: 2680.00\ngender: 0.38\nheight: 6.43\nweight: 1436.70\nap_hi: 125.48\nap_lo: 202.23\ncholesterol: 2143.00\ngluc: 348.27\nsmoke: 16.44\nalco: 3.45\nactive: 54.34\n\nSelected Features (Top k): ['age', 'height', 'weight', 'ap_hi', 'ap_lo', 'cholesterol', 'gluc', 'smoke', 'alco', 'active']\n","output_type":"stream"}],"execution_count":10},{"cell_type":"markdown","source":"# Training the different models","metadata":{}},{"cell_type":"markdown","source":"**1. Logistic Regression** ","metadata":{}},{"cell_type":"code","source":"#X = features[['age', 'height', 'weight', 'ap_hi', 'ap_lo', 'cholesterol', 'gluc', 'smoke', 'alco', 'active']]\n#y = target\n\n# Splitting the data into training and testing sets, 80-20\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n\n# Training the model\nlr_model = LogisticRegression()\nlr_model.fit(X_train_scaled,y_train)\n\ny_pred_lr = lr_model.predict(X_test_scaled)\n\nprint(classification_report(y_test, y_pred_lr))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.644964Z","iopub.execute_input":"2025-04-08T09:38:08.645267Z","iopub.status.idle":"2025-04-08T09:38:08.727380Z","shell.execute_reply.started":"2025-04-08T09:38:08.645238Z","shell.execute_reply":"2025-04-08T09:38:08.726648Z"}},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.71      0.76      0.73      7070\n           1       0.73      0.69      0.71      6930\n\n    accuracy                           0.72     14000\n   macro avg       0.72      0.72      0.72     14000\nweighted avg       0.72      0.72      0.72     14000\n\n","output_type":"stream"}],"execution_count":11},{"cell_type":"markdown","source":"**2. Decision Tree Classifier**","metadata":{}},{"cell_type":"code","source":"#\n\n#X = features[['age', 'height', 'weight', 'ap_hi', 'ap_lo', 'cholesterol', 'gluc', 'smoke', 'alco', 'active']]\n#y = target\n\n# Splitting the data into training and testing sets, 80-20\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n\ndt_model = DecisionTreeClassifier(random_state = 42)\ndt_model.fit(X_train_scaled, y_train)\ny_pred_dt = dt_model.predict(X_test_scaled)\n\nprint(classification_report(y_test, y_pred_dt))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.728187Z","iopub.execute_input":"2025-04-08T09:38:08.728439Z","iopub.status.idle":"2025-04-08T09:38:08.968115Z","shell.execute_reply.started":"2025-04-08T09:38:08.728417Z","shell.execute_reply":"2025-04-08T09:38:08.967348Z"}},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.64      0.63      0.63      7070\n           1       0.63      0.64      0.63      6930\n\n    accuracy                           0.63     14000\n   macro avg       0.63      0.63      0.63     14000\nweighted avg       0.63      0.63      0.63     14000\n\n","output_type":"stream"}],"execution_count":12},{"cell_type":"markdown","source":"**3. RandomForest Classifier**","metadata":{}},{"cell_type":"code","source":"#X = features[['age', 'height', 'weight', 'ap_hi', 'ap_lo', 'cholesterol', 'gluc', 'smoke', 'alco', 'active']]\n#y = target\n\n# Splitting the data into training and testing sets, 80-20\n#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 42)\n\nrf_model = RandomForestClassifier()\nrf_model.fit(X_train_scaled, y_train)\n\ny_pred_rf = rf_model.predict(X_test_scaled)\nprint(classification_report(y_test, y_pred_rf))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:08.970719Z","iopub.execute_input":"2025-04-08T09:38:08.970921Z","iopub.status.idle":"2025-04-08T09:38:14.200946Z","shell.execute_reply.started":"2025-04-08T09:38:08.970903Z","shell.execute_reply":"2025-04-08T09:38:14.200069Z"}},"outputs":[{"name":"stdout","text":"              precision    recall  f1-score   support\n\n           0       0.71      0.73      0.72      7070\n           1       0.72      0.70      0.71      6930\n\n    accuracy                           0.72     14000\n   macro avg       0.72      0.72      0.72     14000\nweighted avg       0.72      0.72      0.72     14000\n\n","output_type":"stream"}],"execution_count":13},{"cell_type":"markdown","source":"# PLOTTING CONFUSION MATRIX OF THE MODELS' RESULTS","metadata":{}},{"cell_type":"code","source":"# PLOTTING CONFUSION MATRIX TO COMPARE MODELS\n\nmodels = [lr_model, dt_model, rf_model]\npredicted_y_values = [y_pred_lr, y_pred_dt, y_pred_rf]\n\n# Determine number of subplots\nn_plots = len(predicted_y_values)\n\n# Create a single figure with horizontal subplots\nfig, axes = plt.subplots(1, n_plots, figsize=(6 * n_plots, 5), squeeze=False)\naxes = axes.flatten()  # Flatten in case of multiple plots\n\n# Loop through predictions and plot confusion matrices\nfor i, predicted_value in enumerate(predicted_y_values):\n    conf_matrix = confusion_matrix(y_test, predicted_value)\n    #print(f\"Confusion Matrix for Model: {models[i]}:\")\n    #print(conf_matrix)\n# Compute percentages\n    conf_matrix_percent = conf_matrix.astype(float) / conf_matrix.sum(axis=1, keepdims=True) * 100\n    conf_matrix_percent = np.nan_to_num(conf_matrix_percent, nan=0.0)  # Handle division by zero\n\n    # Format annotations (count \\n percentage%)\n    annotations = [[f\"{conf_matrix[row, col]}\\n({conf_matrix_percent[row, col]:.1f}%)\" \n                    for col in range(conf_matrix.shape[1])] for row in range(conf_matrix.shape[0])]\n    # Plot heatmap in the respective subplot\n    sns.heatmap(conf_matrix, annot = annotations, ax = axes[i], cmap = \"Blues\", fmt = \"\")\n\n    # Set subplot labels\n    axes[i].set_title(f\"{models[i]}\")\n    axes[i].set_xlabel(\"Predicted\")\n    axes[i].set_ylabel(\"True\")\n\n# Adjust layout and display\nplt.tight_layout()\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:14.202450Z","iopub.execute_input":"2025-04-08T09:38:14.202697Z","iopub.status.idle":"2025-04-08T09:38:14.991901Z","shell.execute_reply.started":"2025-04-08T09:38:14.202676Z","shell.execute_reply":"2025-04-08T09:38:14.991073Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1800x500 with 6 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"\ndef plot_multiple_confusion_matrices(y_true, predicted_y_values, labels=[]):\n    # Determine number of subplots\n    n_plots = len(predicted_y_values)\n\n    # Create a single figure with horizontal subplots\n    fig, axes = plt.subplots(1, n_plots, figsize=(6*n_plots, 5), squeeze=False)\n\n    # Flatten axes in case of multiple plots\n    axes = axes.flatten()\n\n    # Create a confusion matrix for each prediction\n    for i, predicted_value in enumerate(predicted_y_values):\n        # Compute confusion matrix\n        conf_matrix = confusion_matrix(y_true, predicted_value)\n        \n        # Normalize the confusion matrix safely\n        row_sums = conf_matrix.sum(axis=1, keepdims=True)\n        conf_matrix_percent = np.where(row_sums != 0, conf_matrix / row_sums * 100, 0)\n\n        # Create custom annotations\n        annotations = np.array([\n            [f\"{conf_matrix[row, col]}\\n({conf_matrix_percent[row, col]:.1f}%)\"\n             for col in range(conf_matrix.shape[1])]\n            for row in range(conf_matrix.shape[0])\n        ])\n\n        # Plot heatmap on the corresponding subplot\n        sns.heatmap(conf_matrix, \n                    ax=axes[i],\n                    annot=annotations, \n                    fmt='', \n                    cmap='Blues', \n                    cbar=True)\n\n        # Set title\n        if labels and i < len(labels):\n            axes[i].set_title(labels[i])\n\n        axes[i].set_xlabel('Predicted')\n        axes[i].set_ylabel('True')\n\n    # Adjust layout and display\n    plt.tight_layout()\n    plt.show()\n\n# Example usage\nplot_multiple_confusion_matrices(\n    y_test, \n    [y_pred_lr, y_pred_dt, y_pred_rf],\n    labels=['Logistic Regression', 'Decision Tree', 'Random Forest']\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:14.992807Z","iopub.execute_input":"2025-04-08T09:38:14.993098Z","iopub.status.idle":"2025-04-08T09:38:15.814000Z","shell.execute_reply.started":"2025-04-08T09:38:14.993071Z","shell.execute_reply":"2025-04-08T09:38:15.813134Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1800x500 with 6 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":15},{"cell_type":"markdown","source":"# HYPER-PARAMETER TUNING AND CROSS VALIDATION USING TRAINING DATA # ","metadata":{}},{"cell_type":"code","source":"#Hyperparameter Tuning using RandomizedSearchCV\n\n# Define hyperparameter grids\nlr_param_grid = {\n    'C': np.logspace(-4, 4, 20),  \n    'penalty': ['l1', 'l2'],  \n    'solver': ['liblinear', 'saga']\n}\n\nrf_param_grid = {\n    'n_estimators': np.arange(50, 300, 50),\n    'max_depth': [None, 5, 10, 20],\n    'min_samples_split': [2, 5, 10],\n    'min_samples_leaf': [1, 2, 4],\n    'bootstrap': [True, False]\n}\n\ndt_param_grid = {\n    'max_depth': [None, 5, 10, 20, 30],\n    'min_samples_split': [2, 5, 10],\n    'min_samples_leaf': [1, 2, 4, 6],\n    'criterion': ['gini', 'entropy'],\n    'splitter': ['best', 'random']\n}\n\n# Perform Randomized Search for Logistic Regression\nlr_random_search = RandomizedSearchCV(\n    LogisticRegression(),\n    param_distributions=lr_param_grid,\n    n_iter=20,\n    cv=5,\n    scoring='f1',\n    random_state=42,\n    n_jobs=-1\n)\nlr_random_search.fit(X_train_scaled, y_train)  \n\n# Perform Randomized Search for Random Forest\nrf_random_search = RandomizedSearchCV(\n    RandomForestClassifier(),\n    param_distributions=rf_param_grid,\n    n_iter=20,\n    cv=5,\n    scoring='f1',\n    random_state=42,\n    n_jobs=-1\n)\nrf_random_search.fit(X_train, y_train)  # No scaling needed for Random Forest\n\n# Perform Randomized Search for Decision Tree\ndt_random_search = RandomizedSearchCV(\n    DecisionTreeClassifier(),\n    param_distributions=dt_param_grid,\n    n_iter=20,\n    cv=5,\n    scoring='f1',\n    random_state=42,\n    n_jobs=-1\n)\ndt_random_search.fit(X_train, y_train)  # No scaling needed for Decision Tree\n\n# Best estimators from RandomizedSearchCV\nbest_lr = lr_random_search.best_estimator_\nbest_rf = rf_random_search.best_estimator_\nbest_dt = dt_random_search.best_estimator_\n\nprint(\"\\nBest Hyperparameters for Logistic Regression:\")\nprint(lr_random_search.best_params_)\n\nprint(\"\\nBest Hyperparameters for Random Forest:\")\nprint(rf_random_search.best_params_)\n\nprint(\"\\n Best Hyperparameters for Decision Tree:\")\nprint(dt_random_search.best_params_)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-04-08T09:38:15.814989Z","iopub.execute_input":"2025-04-08T09:38:15.815330Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# COMPARING MODELS USING CROSS VALIDATION","metadata":{}},{"cell_type":"code","source":"# Perform cross-validation on the train data\ncv_scores_lr = cross_val_score(best_lr, X_train_scaled, y_train, cv=5, scoring='f1')\ncv_scores_rf = cross_val_score(best_rf, X_train, y_train, cv=5, scoring='f1')\ncv_scores_dt = cross_val_score(best_dt, X_train, y_train, cv=5, scoring='f1')\n\nprint(\"\\n Cross-validation F1 scores on train data:\")\nprint(f\"Logistic Regression: {cv_scores_lr.mean():.4f}\")\nprint(f\"Random Forest: {cv_scores_rf.mean():.4f}\")\nprint(f\"Decision Tree: {cv_scores_dt.mean():.4f}\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# GENERATING CLASSIFICATION REPORT AND CONFUSION MATRIX","metadata":{}},{"cell_type":"code","source":"# Predictions on the test set\ny_pred_lr = best_lr.predict(X_test_scaled)\ny_pred_rf = best_rf.predict(X_test)\ny_pred_dt = best_dt.predict(X_test)\n\n# classification reports \nprint(\"\\nLogistic Regression Performance:\")\nprint(classification_report(y_test, y_pred_lr))\n\nprint(\"\\nRandom Forest Performance:\")\nprint(classification_report(y_test, y_pred_rf))\n\nprint(\"\\nDecision Tree Performance:\")\nprint(classification_report(y_test, y_pred_dt))\n\n# Generate and display confusion matrices\ndef plot_confusion_matrix(y_true, y_pred, model_name):\n    cm = confusion_matrix(y_true, y_pred)\n    plt.figure(figsize=(5, 4))\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=[\"0\", \"1\"], yticklabels=[\"0\", \"1\"]) #Where 0-No Cardiovascular Risk, 1-Cardiovascular risk\n    plt.xlabel(\"Predicted Label\")\n    plt.ylabel(\"True Label\")\n    plt.title(f\"Confusion Matrix for {model_name}\")\n    plt.show()\n\nplot_confusion_matrix(y_test, y_pred_lr, \"Logistic Regression\")\nplot_confusion_matrix(y_test, y_pred_rf, \"Random Forest\")\nplot_confusion_matrix(y_test, y_pred_dt, \"Decision Tree\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# GRADIENT BOOSTING MODEL","metadata":{}},{"cell_type":"code","source":"# \nlgb_model = lgb.LGBMClassifier(random_state=42)\nlgb_model.fit(X_train, y_train)\n\ny_pred_lgb = lgb_model.predict(X_test)\nlgb_class = classification_report(y_test, y_pred_lgb)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"xgb_model = xgb.XGBClassifier(objective=\"binary:logistic\", \n                              eval_metric = \"logloss\", random_state = 42,\n                             'colsample_bytree'= 0.7047405308156491, 'gamma'= 2.0832243894754328, 'max_depth'= 13.0, 'min_child_weight'= 5.0, 'reg_alpha'= 43.0, 'reg_lambda'= 0.817235243191371)\nxgb_model.fit(X_train, y_train)\n\ny_pred_xgb = xgb_model.predict(X_test)\nxgb_class = classification_report(y_test, y_pred_xgb)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"gbc_model = GradientBoostingClassifier(random_state=42)\ngbc_model.fit(X_train, y_train)\n\ny_pred_gbc = gbc_model.predict(X_test)\ngbc_class = classification_report(y_test, y_pred_gbc)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"\\nModel Performance Classification Report:\")\nprint(f\"XGBoost:\\n{xgb_class}\")\nprint(f\"LightGBM:\\n{lgb_class}\")\nprint(f\"GradientBoostingClassifier:\\n{gbc_class}\")","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Compute classification reports\nxgb_report = classification_report(y_test, y_pred_xgb, output_dict=True)\nlgb_report = classification_report(y_test, y_pred_lgb, output_dict=True)\ngbc_report = classification_report(y_test, y_pred_gbc, output_dict=True)\n\n# Extract relevant metrics (Weighted Avg)\nmodels = [\"XGBoost\", \"LightGBM\", \"GradientBoostingClassifier\"]\naccuracy = [\n    accuracy_score(y_test, y_pred_xgb),\n    accuracy_score(y_test, y_pred_lgb),\n    accuracy_score(y_test, y_pred_gbc),\n]\nprecision = [\n    xgb_report[\"weighted avg\"][\"precision\"],\n    lgb_report[\"weighted avg\"][\"precision\"],\n    gbc_report[\"weighted avg\"][\"precision\"],\n]\nrecall = [\n    xgb_report[\"weighted avg\"][\"recall\"],\n    lgb_report[\"weighted avg\"][\"recall\"],\n    gbc_report[\"weighted avg\"][\"recall\"],\n]\nf1_score = [\n    xgb_report[\"weighted avg\"][\"f1-score\"],\n    lgb_report[\"weighted avg\"][\"f1-score\"],\n    gbc_report[\"weighted avg\"][\"f1-score\"],\n]\n\n# Create DataFrame\ndf_scores = pd.DataFrame({\n    \"Model\": models,\n    \"Accuracy\": accuracy,\n    \"Precision\": precision,\n    \"Recall\": recall,\n    \"F1 Score\": f1_score\n})\n\n# Display DataFrame\nprint(df_scores)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# import packages for hyperparameters tuning\nfrom hyperopt import STATUS_OK, Trials, fmin, hp, tpe\n\nspace={'max_depth': hp.quniform(\"max_depth\", 3, 18, 1),\n        'gamma': hp.uniform ('gamma', 1,9),\n        'reg_alpha' : hp.quniform('reg_alpha', 40,180,1),\n        'reg_lambda' : hp.uniform('reg_lambda', 0,1),\n        'colsample_bytree' : hp.uniform('colsample_bytree', 0.5,1),\n        'min_child_weight' : hp.quniform('min_child_weight', 0, 10, 1),\n        'n_estimators': 180,\n        'seed': 0\n    }","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"def objective(space):\n    clf=xgb.XGBClassifier(\n                    n_estimators =space['n_estimators'], max_depth = int(space['max_depth']), gamma = space['gamma'],\n                    reg_alpha = int(space['reg_alpha']),min_child_weight=int(space['min_child_weight']),\n                    colsample_bytree=int(space['colsample_bytree']))\n    \n    evaluation = [( X_train, y_train), ( X_test, y_test)]\n    \n    clf.fit(X_train, y_train,\n            eval_set=evaluation, eval_metric=\"auc\",\n            early_stopping_rounds=10,verbose=False)\n    \n    pred = clf.predict(X_test)\n    accuracy = accuracy_score(y_test, pred>0.5)\n    print (\"SCORE:\", accuracy)\n    return {'loss': -accuracy, 'status': STATUS_OK }","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"trials = Trials()\n\nbest_hyperparams = fmin(fn = objective,\n                        space = space,\n                        algo = tpe.suggest,\n                        max_evals = 100,\n                        trials = trials)","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(f\"The best hyperparameters are :\\n{best_hyperparams}\")","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}